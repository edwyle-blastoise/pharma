{"ast":null,"code":"var _jsxFileName = \"/Volumes/HDD/work_Masha/Projects/rezoklastin/src/components/side-bar/navbar/navbar.js\";\nimport React, { useState } from \"react\";\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport './navbar.css';\n\nconst Navbar = () => {\n  const points = ['Опасность остеопороза', 'Группа и факторы риска', 'Симптомы и проявления', 'Типы остеопороза', 'Диагностика', 'Профилактика и лечение', 'Препараты', 'Побочные эффекты и их устранение', 'Золедронаты', 'Дозировка', 'Эффективность', 'Длительность лечения', 'Удобство использования'];\n  const instructionPoints = ['Состав', 'Фармакологическое действие', 'Показания к применению', 'Противопоказания', 'Способ применения и дозы', 'Инструкция по приготовлению раствора', 'Побочное действие', 'Передозировка', 'Взаимодействие с другими лекарственными средствами', 'Особые указания', 'Влияние на способность управлять транспортными средствами и другими механизмами', 'Форма выпуска', 'Условия хранения', 'Срок годности', 'Условия отпуска'];\n  const path = window.location.pathname;\n\n  if (path.includes('instruction')) {\n    console.log('instruction');\n  }\n\n  const [activeId, setState] = useState(0);\n\n  const onActiveLink = (event, index) => {\n    document.getElementById(index).childNodes.forEach(child => child.classList.add('anchor_active'));\n\n    if (index !== activeId) {\n      document.getElementById(activeId).childNodes.forEach(child => {\n        child.classList.remove('anchor_active');\n      });\n    }\n\n    setState(index);\n  };\n\n  const links = points.map((point, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      id: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar__number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, index + 1, \". \"), /*#__PURE__*/React.createElement(AnchorLink, {\n      offset: () => 80,\n      className: \"anchor\",\n      href: '#card-' + (index + 1),\n      onClick: event => onActiveLink(event, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, point));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"navbar__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435 \\u0441\\u0442\\u0430\\u0442\\u044C\\u0438:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"navbar__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, links));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/Volumes/HDD/work_Masha/Projects/rezoklastin/src/components/side-bar/navbar/navbar.js"],"names":["React","useState","AnchorLink","Navbar","points","instructionPoints","path","window","location","pathname","includes","console","log","activeId","setState","onActiveLink","event","index","document","getElementById","childNodes","forEach","child","classList","add","remove","links","map","point"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAMC,MAAM,GAAG,CAAC,uBAAD,EACX,wBADW,EAEX,uBAFW,EAGX,kBAHW,EAIX,aAJW,EAKX,wBALW,EAMX,WANW,EAOX,kCAPW,EAQX,aARW,EASX,WATW,EAUX,eAVW,EAWX,sBAXW,EAYX,wBAZW,CAAf;AAcA,QAAMC,iBAAiB,GAAG,CAAC,QAAD,EACtB,4BADsB,EAEtB,wBAFsB,EAGtB,kBAHsB,EAItB,0BAJsB,EAKtB,sCALsB,EAMtB,mBANsB,EAOtB,eAPsB,EAQtB,oDARsB,EAStB,iBATsB,EAUtB,iFAVsB,EAWtB,eAXsB,EAYtB,kBAZsB,EAatB,eAbsB,EActB,iBAdsB,CAA1B;AAgBA,QAAMC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAA7B;;AAEA,MAAIH,IAAI,CAACI,QAAL,CAAc,aAAd,CAAJ,EAAkC;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;AAGD,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBb,QAAQ,CAAC,CAAD,CAArC;;AAEA,QAAMc,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAEnCC,IAAAA,QAAQ,CAACC,cAAT,CAAwBF,KAAxB,EAA+BG,UAA/B,CAA0CC,OAA1C,CAAkDC,KAAK,IACnDA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoB,eAApB,CADJ;;AAGA,QAAIP,KAAK,KAAKJ,QAAd,EAAuB;AACnBK,MAAAA,QAAQ,CAACC,cAAT,CAAwBN,QAAxB,EAAkCO,UAAlC,CAA6CC,OAA7C,CAAqDC,KAAK,IAAI;AAC1DA,QAAAA,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,eAAvB;AACH,OAFD;AAGH;;AACDX,IAAAA,QAAQ,CAACG,KAAD,CAAR;AACH,GAXD;;AAaA,QAAMS,KAAK,GAAGtB,MAAM,CAACuB,GAAP,CAAW,CAACC,KAAD,EAAQX,KAAR,KAAkB;AACvC,wBACI;AAAI,MAAA,GAAG,EAAEA,KAAT;AACI,MAAA,EAAE,EAAEA,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCA,KAAK,GAAC,CAAxC,OAFJ,eAGI,oBAAC,UAAD;AACI,MAAA,MAAM,EAAE,MAAM,EADlB;AAEI,MAAA,SAAS,EAAC,QAFd;AAGI,MAAA,IAAI,EAAE,YAAYA,KAAK,GAAG,CAApB,CAHV;AAKI,MAAA,OAAO,EAAGD,KAAD,IAAWD,YAAY,CAACC,KAAD,EAAQC,KAAR,CALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOKW,KAPL,CAHJ,CADJ;AAeH,GAhBa,CAAd;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GADJ,eAEI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KADL,CAFJ,CADJ;AAQH,CAhFD;;AAkFA,eAAevB,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\n\nimport './navbar.css';\n\nconst Navbar = () => {\n\n    const points = ['Опасность остеопороза',\n        'Группа и факторы риска',\n        'Симптомы и проявления',\n        'Типы остеопороза',\n        'Диагностика',\n        'Профилактика и лечение',\n        'Препараты',\n        'Побочные эффекты и их устранение',\n        'Золедронаты',\n        'Дозировка',\n        'Эффективность',\n        'Длительность лечения',\n        'Удобство использования'];\n\n    const instructionPoints = ['Состав',\n        'Фармакологическое действие',\n        'Показания к применению',\n        'Противопоказания',\n        'Способ применения и дозы',\n        'Инструкция по приготовлению раствора',\n        'Побочное действие',\n        'Передозировка',\n        'Взаимодействие с другими лекарственными средствами',\n        'Особые указания',\n        'Влияние на способность управлять транспортными средствами и другими механизмами',\n        'Форма выпуска',\n        'Условия хранения',\n        'Срок годности',\n        'Условия отпуска'];\n\n    const path = window.location.pathname;\n\n    if (path.includes('instruction')) {\n        console.log('instruction')\n    }\n\n\n    const [activeId, setState] = useState(0);\n\n    const onActiveLink = (event, index) => {\n\n        document.getElementById(index).childNodes.forEach(child =>\n            child.classList.add('anchor_active')\n        );\n        if (index !== activeId){\n            document.getElementById(activeId).childNodes.forEach(child => {\n                child.classList.remove('anchor_active')\n            })\n        }\n        setState(index);\n    };\n\n    const links = points.map((point, index) => {\n        return (\n            <li key={index}\n                id={index}>\n                <span className='navbar__number'>{index+1}. </span>\n                <AnchorLink\n                    offset={() => 80}\n                    className='anchor'\n                    href={'#card-' + (index + 1)}\n\n                    onClick={(event) => onActiveLink(event, index)}\n                >\n                    {point}\n                </AnchorLink>\n            </li>\n        )\n    });\n\n    return (\n        <div className='navbar'>\n            <p className='navbar__title'>Содержание статьи:</p>\n            <ul className='navbar__list'>\n                {links}\n            </ul>\n        </div>\n    )\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}